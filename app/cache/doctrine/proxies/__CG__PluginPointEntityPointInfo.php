<?php

namespace DoctrineProxy\__CG__\Plugin\Point\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PointInfo extends \Plugin\Point\Entity\PointInfo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_point_info_id', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_basic_point_rate', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_point_conversion_rate', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_round_type', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_calculation_type', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_add_point_status', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'create_date', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'update_date');
        }

        return array('__isInitialized__', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_point_info_id', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_basic_point_rate', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_point_conversion_rate', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_round_type', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_calculation_type', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'plg_add_point_status', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'create_date', '' . "\0" . 'Plugin\\Point\\Entity\\PointInfo' . "\0" . 'update_date');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PointInfo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setPlgPointInfoId($plg_point_info_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgPointInfoId', array($plg_point_info_id));

        return parent::setPlgPointInfoId($plg_point_info_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgPointInfoId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgPointInfoId', array());

        return parent::getPlgPointInfoId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlgBasicPointRate($plg_basic_point_rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgBasicPointRate', array($plg_basic_point_rate));

        return parent::setPlgBasicPointRate($plg_basic_point_rate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgBasicPointRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgBasicPointRate', array());

        return parent::getPlgBasicPointRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlgPointConversionRate($plg_point_conversion_rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgPointConversionRate', array($plg_point_conversion_rate));

        return parent::setPlgPointConversionRate($plg_point_conversion_rate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgPointConversionRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgPointConversionRate', array());

        return parent::getPlgPointConversionRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlgRoundType($plg_round_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgRoundType', array($plg_round_type));

        return parent::setPlgRoundType($plg_round_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgRoundType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgRoundType', array());

        return parent::getPlgRoundType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlgCalculationType($plg_calculation_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgCalculationType', array($plg_calculation_type));

        return parent::setPlgCalculationType($plg_calculation_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgCalculationType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgCalculationType', array());

        return parent::getPlgCalculationType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlgAddPointStatus($plg_add_point_status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlgAddPointStatus', array($plg_add_point_status));

        return parent::setPlgAddPointStatus($plg_add_point_status);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlgAddPointStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlgAddPointStatus', array());

        return parent::getPlgAddPointStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate($create_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', array($create_date));

        return parent::setCreateDate($create_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', array());

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateDate($update_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateDate', array($update_date));

        return parent::setUpdateDate($update_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateDate', array());

        return parent::getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', array($offset));

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', array($offset, $value));

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', array($offset));

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', array($offset));

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray(array $arrProps, array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', array($arrProps, $excludeAttribute, $parentClass));

        return parent::setPropertiesFromArray($arrProps, $excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($excludeAttribute, $parentClass));

        return parent::toArray($excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function copyProperties($srcObject, array $excludeAttribute = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyProperties', array($srcObject, $excludeAttribute));

        return parent::copyProperties($srcObject, $excludeAttribute);
    }

}
